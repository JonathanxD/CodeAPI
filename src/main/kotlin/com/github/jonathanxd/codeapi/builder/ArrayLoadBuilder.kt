/*
 *      CodeAPI - Framework to generate Java code and Bytecode code. <https://github.com/JonathanxD/CodeAPI>
 *
 *         The MIT License (MIT)
 *
 *      Copyright (c) 2017 TheRealBuggy/JonathanxD (https://github.com/JonathanxD/ & https://github.com/TheRealBuggy/) <jonathan.scripter@programmer.net>
 *      Copyright (c) contributors
 *
 *
 *      Permission is hereby granted, free of charge, to any person obtaining a copy
 *      of this software and associated documentation files (the "Software"), to deal
 *      in the Software without restriction, including without limitation the rights
 *      to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *      copies of the Software, and to permit persons to whom the Software is
 *      furnished to do so, subject to the following conditions:
 *
 *      The above copyright notice and this permission notice shall be included in
 *      all copies or substantial portions of the Software.
 *
 *      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *      FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *      LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *      OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *      THE SOFTWARE.
 */
package com.github.jonathanxd.codeapi.builder

import com.github.jonathanxd.codeapi.base.impl.ArrayLoadImpl
import com.github.jonathanxd.codeapi.base.ArrayLoad

// Generated by BuilderGen
open class ArrayLoadBuilder(): Builder<ArrayLoad, ArrayLoadBuilder>() {

    /**
     * See [ArrayLoad.index]
     */
    lateinit var index: com.github.jonathanxd.codeapi.CodePart

    /**
     * See [ArrayLoad.target]
     */
    lateinit var target: com.github.jonathanxd.codeapi.CodePart

    /**
     * See [ArrayLoad.valueType]
     */
    lateinit var valueType: com.github.jonathanxd.codeapi.type.CodeType

    /**
     * See [ArrayLoad.arrayType]
     */
    lateinit var arrayType: com.github.jonathanxd.codeapi.type.CodeType

    constructor(defaults: ArrayLoad) : this() {
        this.index = defaults.index
        this.target = defaults.target
        this.valueType = defaults.valueType
        this.arrayType = defaults.arrayType
    }


    /**
     * See [ArrayLoad.index]
     */
    fun withIndex(value: com.github.jonathanxd.codeapi.CodePart): ArrayLoadBuilder {
        this.index = value
        return this
    }


    /**
     * See [ArrayLoad.target]
     */
    fun withTarget(value: com.github.jonathanxd.codeapi.CodePart): ArrayLoadBuilder {
        this.target = value
        return this
    }


    /**
     * See [ArrayLoad.valueType]
     */
    fun withValueType(value: com.github.jonathanxd.codeapi.type.CodeType): ArrayLoadBuilder {
        this.valueType = value
        return this
    }


    /**
     * See [ArrayLoad.arrayType]
     */
    fun withArrayType(value: com.github.jonathanxd.codeapi.type.CodeType): ArrayLoadBuilder {
        this.arrayType = value
        return this
    }

    override fun build(): ArrayLoad = ArrayLoadImpl(
            index = this.index,
            target = this.target,
            valueType = this.valueType,
            arrayType = this.arrayType
    )


    companion object {
        @JvmStatic
        fun builder() = ArrayLoadBuilder()
    }
}
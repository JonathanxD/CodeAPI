/*
 *      CodeAPI - Framework to generate Java code and Bytecode code. <https://github.com/JonathanxD/CodeAPI>
 *
 *         The MIT License (MIT)
 *
 *      Copyright (c) 2017 TheRealBuggy/JonathanxD (https://github.com/JonathanxD/ & https://github.com/TheRealBuggy/) <jonathan.scripter@programmer.net>
 *      Copyright (c) contributors
 *
 *
 *      Permission is hereby granted, free of charge, to any person obtaining a copy
 *      of this software and associated documentation files (the "Software"), to deal
 *      in the Software without restriction, including without limitation the rights
 *      to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *      copies of the Software, and to permit persons to whom the Software is
 *      furnished to do so, subject to the following conditions:
 *
 *      The above copyright notice and this permission notice shall be included in
 *      all copies or substantial portions of the Software.
 *
 *      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *      FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *      LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *      OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *      THE SOFTWARE.
 */
package com.github.jonathanxd.codeapi.builder

import com.github.jonathanxd.codeapi.base.impl.MethodFragmentImpl
import com.github.jonathanxd.codeapi.base.MethodFragment

// Generated by BuilderGen
class MethodFragmentBuilder(): Builder<MethodFragment, MethodFragmentBuilder>() {
    lateinit var declaringType: com.github.jonathanxd.codeapi.base.TypeDeclaration
    lateinit var scope: com.github.jonathanxd.codeapi.common.Scope
    var arguments: kotlin.collections.List<com.github.jonathanxd.codeapi.common.CodeArgument> = emptyList()
    lateinit var description: com.github.jonathanxd.codeapi.common.TypeSpec
    var parameters: kotlin.collections.List<com.github.jonathanxd.codeapi.common.CodeParameter> = emptyList()
    lateinit var body: com.github.jonathanxd.codeapi.CodeSource

    constructor(defaults: MethodFragment) : this() {
        this.declaringType = defaults.declaringType
        this.scope = defaults.scope
        this.arguments = defaults.arguments
        this.description = defaults.description
        this.parameters = defaults.parameters
        this.body = defaults.body
    }

    fun withDeclaringType(value: com.github.jonathanxd.codeapi.base.TypeDeclaration): MethodFragmentBuilder {
        this.declaringType = value
        return this
    }

    fun withScope(value: com.github.jonathanxd.codeapi.common.Scope): MethodFragmentBuilder {
        this.scope = value
        return this
    }

    fun withArguments(value: kotlin.collections.List<com.github.jonathanxd.codeapi.common.CodeArgument>): MethodFragmentBuilder {
        this.arguments = value
        return this
    }

    fun withDescription(value: com.github.jonathanxd.codeapi.common.TypeSpec): MethodFragmentBuilder {
        this.description = value
        return this
    }

    fun withParameters(value: kotlin.collections.List<com.github.jonathanxd.codeapi.common.CodeParameter>): MethodFragmentBuilder {
        this.parameters = value
        return this
    }

    fun withBody(value: com.github.jonathanxd.codeapi.CodeSource): MethodFragmentBuilder {
        this.body = value
        return this
    }

    override fun build(): MethodFragment = MethodFragmentImpl(
            declaringType = this.declaringType,
            scope = this.scope,
            arguments = this.arguments,
            description = this.description,
            parameters = this.parameters,
            body = this.body
    )
}